apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "app.name" . }}-{{ .Release.Name }}
    helm.sh/chart: {{ include "app.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: application
    app.kubernetes.io/component: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.image.tag | quote }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "app.name" . }}-{{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  revisionHistoryLimit: 5
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "app.name" . }}-{{ .Release.Name }}
        helm.sh/chart: {{ include "app.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: application
        app.kubernetes.io/component: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.image.tag | quote }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext: {{- toYaml .Values.image.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        name: {{ .Release.Name }}
        command:
        - java
        args:
        - -jar
        - blotout-0.0.1.jar
        env:
          - name: SERVER_PORT
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: SERVER_PORT
          - name: LOGGING_FILE
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: LOGGING_FILE
          - name: LOGGING_LEVEL_COM_BLOT
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: LOGGING_LEVEL_COM_BLOT
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: AWS_SECRET_ACCESS_KEY
          - name: AWS_DEFAULT_REGION
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: AWS_DEFAULT_REGION
          - name: AMAZON_ACCOUNT_ID
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: AMAZON_ACCOUNT_ID
          - name: ORGANIZATION_ID
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: ORGANIZATION_ID
          - name: ORGANIZATION_BUCKET
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: ORGANIZATION_BUCKET
          - name: POSTGRESS_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: POSTGRESS_ENDPOINT
          - name: POSTGRESS_PORT
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: POSTGRESS_PORT
          - name: POSTGRESS_DATABASE_NAME
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: POSTGRESS_DATABASE_NAME
          - name: POSTGRESS_USER
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: POSTGRESS_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: POSTGRES_PASSWORD
          - name: REDIS_CLUSTER_NODES
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: REDIS_CLUSTER_NODES
          - name: CRYPTOKEY
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: CRYPTOKEY
          - name: TOKEN_EXPIRY
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: TOKEN_EXPIRY
          - name: BLOTOUT_LOGIN_URL
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: BLOTOUT_LOGIN_URL
          - name: GOOGLE_CLIENT_ID
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: GOOGLE_CLIENT_ID
          - name: GOOGLE_CLIENT_SECRET
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: GOOGLE_CLIENT_SECRET
          - name: MS_CLIENT_SECRET
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: MS_CLIENT_SECRET
          - name: MS_CLIENT_ID
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: MS_CLIENT_ID
          - name: USERPASSWORD_EXPIRY
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: USERPASSWORD_EXPIRY
          - name: SMTP_USER
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: SMTP_USER
          - name: SMTP_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: SMTP_PASSWORD
          - name: SMTP_MAIL_FROM
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: SMTP_MAIL_FROM
          - name: SUPERSET_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: SUPERSET_HOSTNAME
          - name: MELTANO_DEPLOY
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: MELTANO_DEPLOY
          - name: MELTANO_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: MELTANO_HOSTNAME
          - name: FIREHOSE_ROLE_NAME
            valueFrom:
              configMapKeyRef:
                name: sdk-configmap
                key: FIREHOSE_ROLE_NAME

        {{- if .Values.containerSecurityContext }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        {{- end }}
        ports:
        - name: {{ .Release.Name }}
          containerPort: {{ .Values.service.containerPort }}
          protocol: TCP
        volumeMounts:
        - mountPath: /app/application-dev.properties
          name: app-conf
          subPath: application-dev.properties
          readOnly: true
        resources:
{{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.service.containerPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.service.containerPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        terminationMessagePath: /dev/termination-log
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: app-conf
          configMap:
            name: app-conf
            items:
              - key: configmap.env
                path: application-dev.properties
